[{"/Users/dea/Code/Projects/animetimeline/src/index.js":"1","/Users/dea/Code/Projects/animetimeline/src/App.js":"2","/Users/dea/Code/Projects/animetimeline/src/Components/WholeViz.js":"3","/Users/dea/Code/Projects/animetimeline/src/Components/HeroSection.js":"4","/Users/dea/Code/Projects/animetimeline/src/Components/AnimeTimeline.js":"5","/Users/dea/Code/Projects/animetimeline/src/Components/Footer.js":"6","/Users/dea/Code/Projects/animetimeline/src/Components/AnimeGraph.js":"7","/Users/dea/Code/Projects/animetimeline/src/Components/genres.js":"8"},{"size":150,"mtime":1614562178501,"results":"9","hashOfConfig":"10"},{"size":169,"mtime":1614562178500,"results":"11","hashOfConfig":"10"},{"size":3883,"mtime":1614579210034,"results":"12","hashOfConfig":"10"},{"size":1443,"mtime":1614583247037,"results":"13","hashOfConfig":"10"},{"size":5843,"mtime":1614586518972,"results":"14","hashOfConfig":"10"},{"size":1508,"mtime":1614583157191,"results":"15","hashOfConfig":"10"},{"size":18255,"mtime":1614586499857,"results":"16","hashOfConfig":"10"},{"size":1148,"mtime":1614562178501,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"d15zvt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/dea/Code/Projects/animetimeline/src/index.js",[],["39","40"],"/Users/dea/Code/Projects/animetimeline/src/App.js",[],"/Users/dea/Code/Projects/animetimeline/src/Components/WholeViz.js",["41"],"import React, { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\n//import dataLoad from \"../data/mal_scrape_Jan8_limited.json\";\nimport HeroSection from \"./HeroSection\";\nimport AnimeTimeline from \"./AnimeTimeline\";\nimport AnimeGraph from \"./AnimeGraph\";\nimport Footer from \"./Footer\";\n\nconst dataURL = \"https://gist.githubusercontent.com/deaxmachina/f795176fbfd340cce82373d682cedd43/raw/124f2d14c04e30a7f74b6c04aab9b21e89f80d4c/mal_scrape_Jan8_limited.json\";\n\n\nconst WholeViz = () => {\n\n  /// states ///\n  const [data, setData] = useState(null);\n  const [allData, setAllData] = useState(null)\n  const [selectedYear, setSelectedYear] = useState(2020)\n  const [studios, setStudios] = useState(null);\n\n  // to have animated div only on bigger screen size \n  const [isDesktop, setIsDesktop] = useState(true)\n  const [desktopSize, setDesktopSize] = useState(null);\n  const updatePredicate = function () {\n    setIsDesktop(window.innerWidth > 1500)\n    setDesktopSize(window.innerWidth)\n  }\n  useEffect(() => {\n    updatePredicate();\n    window.addEventListener(\"resize\", updatePredicate);\n  }, [])\n\n  /// Data load ///\n\n  useEffect(() => {\n\n    d3.json(dataURL).then(dataLoad => {\n      // transform data into just {year: 2020, number_anime: 800}\n      // group the anime by year\n      const mygroup = _.groupBy(dataLoad, function(anime){return anime.air_year})\n      // transform the data so we end up with objects with year and number of unique anime in that year by mal_id \n      const mygroupData = []\n        for (const [year, data] of Object.entries(mygroup)) {\n            mygroupData.push({\n                year: year,\n                number_animes: (_.uniqBy(data, 'mal_id')).length\n            })\n        }\n        // filter to the years that you want\n        const filteredCountsList = _.filter(mygroupData, function(o) { \n          return o.year >= 1970 && o.year <= 2020\n        });\n      setData(filteredCountsList)\n\n      // Get list of studios \n      // 1. add category for list of studios for each anime\n      dataLoad.forEach(d => d.studiosList = _.map(d.producers, \"name\"))\n      // 2. get list of studios; flatten it and count by number of appearance \n      const studios = _.map(dataLoad, d => d.studiosList)\n      const studiosCounts = _.countBy(_.flatten(studios))\n      // 3. sort the studious by number of appearance \n      let sortedStudios = _.chain(studiosCounts).\n          map(function(count, studio) {\n              return {\n                  studio: studio,\n                  count: count\n              }\n          })\n          .sortBy('count')\n          .value()\n      sortedStudios = _.reverse(sortedStudios)\n      setStudios(sortedStudios)\n      setAllData(dataLoad)\n    })\n    \n\n\n  }, []);\n\n\n  return (\n    <div id=\"whole-graph-petalscircles\">\n      <HeroSection />\n      <div className=\"whole-graph-petalscircles-container\">\n        <AnimeTimeline\n          data={data}\n          allData={allData}\n          selectedYear={selectedYear}\n          setSelectedYear={setSelectedYear}\n        />\n\n        {\n          isDesktop\n          ?\n            <AnimeGraph\n              desktopSize={desktopSize}\n              allData={allData}\n              selectedYear={selectedYear}\n              setAllData={setAllData}\n              studios={studios}\n              width={1300}\n              height={750}\n              minPopularity={7}\n              maxPopularity={37}\n            />\n          :\n            <AnimeGraph\n              desktopSize={desktopSize}\n              allData={allData}\n              selectedYear={selectedYear}\n              setAllData={setAllData}\n              studios={studios}\n              width={1300}\n              height={650}\n              minPopularity={5}\n              maxPopularity={35}\n            />\n        }\n\n      </div>\n      <Footer />\n    </div>\n  )\n};\n\nexport default WholeViz;","/Users/dea/Code/Projects/animetimeline/src/Components/HeroSection.js",["42","43"],"import React from \"react\";\nimport _ from \"lodash\";\n\n\nconst HeroSection = () => {\n  return (\n    <div id=\"whole-graph-petalscircles-hero\">\n      <h1 className=\"whole-graph-petalscircles-title\">A Timeline of Anime</h1>\n      <div className=\"whole-graph-petalscircles-subtitle\">\n        Explore the evolution of anime over the decades according to the popular anime fan websites <a href=\"https://myanimelist.net/\" target=\"_blank\">MyAnimeList</a>\n      </div>\n\n      <div className=\"whole-graph-petalscircles-instructions\">\n        <p className=\"whole-graph-petalscircles-instructions-title\">How to read & interact with this visualisation</p>\n        <ul className=\"whole-graph-petalscircles-instructions-list\">\n          <li><span>Each circle in the graph below the timeline = one anime.</span></li>\n          <li><span>Sorted vertically by score (rating). Higher = greater score.</span></li>\n          <li><span>The bigger the anime circle, the more members have seen the anime.</span></li>  \n          <li><span>Number of constituent circles in each anime circle = number of genres.</span></li>    \n          <li><span>General tip: Play around, explore! Most elements can be clicked/and or hovered to reveal more information or filter.</span></li>\n        </ul>\n      </div>  \n      <p className=\"whole-graph-petalscircles-disclaimer\">\n        * Best viewed on a laptop/desktop screen.\n      </p>\n    </div>\n\n  )\n}\n\nexport default HeroSection;\n","/Users/dea/Code/Projects/animetimeline/src/Components/AnimeTimeline.js",["44","45","46","47","48"],"/Users/dea/Code/Projects/animetimeline/src/Components/Footer.js",["49","50"],"import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"whole-graph-petalscircles-footer\">  \n      <p className=\"whole-graph-petalscircles-methodology\">Methodology</p>\n      <ul className=\"whole-graph-petalscircles-methodology-list\">\n        <li>\n          For each anime, the anime is displayed once, even if it ran over multiple seasons. For long-running anime that means they end up being put in the winter season as it is the first of the year.\n        </li>\n        <li>\n          The colouring of the genres is based on a completely subjective ordering of \"seriousness\", aiming to give a visual representation of what kind of anime are most popular. \n        </li>\n        <li>\n          \"Popular but low score anime\" are defined as anime with number of members who have seen it in the 75th percentile, but with mean score below 6.5/10.\n        </li>\n      </ul>\n      <p className=\"whole-graph-petalscircles-p\">\n        Data from \n        <a href=\"https://myanimelist.net/\" target=\"_blank\"> MyAnimeList</a>. \n        I do not own any of the data.\n      </p>   \n      <p className=\"whole-graph-petalscircles-p\">\n        Project as part of 100DaysOfCode with D3.js challenge. Project inspiration: Shirley Wu Front End Masters \n        <a href=\"https://frontendmasters.com/courses/d3/\" target=\"_blank\"> course</a>.\n      </p>\n      <p className=\"whole-graph-petalscircles-p\">made by  \n        <span> Dea Bankova </span>©2021\n      </p>\n    </div>\n  )\n};\n\nexport default Footer;","/Users/dea/Code/Projects/animetimeline/src/Components/AnimeGraph.js",["51","52","53","54","55","56","57","58","59","60","61","62"],"/Users/dea/Code/Projects/animetimeline/src/Components/genres.js",["63"],"import * as chroma from \"chroma-js\";\nimport _ from \"lodash\";\n\n\nconst firstColour =  \"#21ABC0\"\nconst secondColour = \"#970C3F\"\nconst thirdColour =  \"#22223b\"\n\n// order genres by 'seriousness' \nconst orderedGenres = [\n  \"Kids\",\n  \"Comedy\",\n  \"School\",\n  'Shounen',\n  \"Shoujo\",\n  \"Fantasy\",\n  \"Super Power\",\n  \"Cars\",\n  \"Sports\",\n  \"Game\",\n  \"Adventure\",\n  \"Action\",\n  \"Demons\",\n  \"Samurai\",\n  \"Supernatural\",\n  'Magic',\n  \"Martial Arts\",\n  \"Mecha\",\n  \"Slice of Life\",\n  \"Parody\",\n  \"Romance\",\n  \"Music\",\n  \"Josei\",\n  \"Seinen\",  \n  \"Mystery\",\n  \"Horror\",\n  \"Thriller\",\n  \"Space\",\n  \"Police\",\n  \"Military\",\n  \"Drama\",\n  \"Historical\",\n  'Sci-Fi',\n  \"Psychological\",\n  \"Dementia\",\n]\n\n// these genres not included in the above list \nconst hentaiGenres = [\n  'Hentai',\n  \"Ecchi\",\n  \"Harem\",\n  \"Shounen Ai\",\n  \"Shoujo Ai\",\n  \"Yaoi\",\n  \"Yuri\",\n]\n\nconst colourScaleOrderedGenres = chroma.scale([firstColour, secondColour, thirdColour]\n  .map(color => chroma(color).brighten(0))\n  .map(color => chroma(color).saturate(0.1))\n  )\n  //.mode('lrgb') // hsl lrgb lab\n  .colors(orderedGenres.length)\n\n\n\nexport { orderedGenres, hentaiGenres, colourScaleOrderedGenres }",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":62,"column":49,"nodeType":"70","messageId":"71","endLine":62,"endColumn":50,"fix":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":9},{"ruleId":"77","severity":1,"message":"78","line":10,"column":101,"nodeType":"79","endLine":10,"endColumn":152},{"ruleId":"73","severity":1,"message":"74","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":9},{"ruleId":"73","severity":1,"message":"80","line":76,"column":13,"nodeType":"75","messageId":"76","endLine":76,"endColumn":29},{"ruleId":"73","severity":1,"message":"81","line":90,"column":13,"nodeType":"75","messageId":"76","endLine":90,"endColumn":27},{"ruleId":"73","severity":1,"message":"82","line":117,"column":13,"nodeType":"75","messageId":"76","endLine":117,"endColumn":28},{"ruleId":"83","severity":1,"message":"84","line":161,"column":6,"nodeType":"85","endLine":161,"endColumn":21,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":9,"nodeType":"79","endLine":20,"endColumn":60},{"ruleId":"77","severity":1,"message":"78","line":25,"column":9,"nodeType":"79","endLine":25,"endColumn":75},{"ruleId":"73","severity":1,"message":"87","line":6,"column":24,"nodeType":"75","messageId":"76","endLine":6,"endColumn":35},{"ruleId":"73","severity":1,"message":"88","line":56,"column":9,"nodeType":"75","messageId":"76","endLine":56,"endColumn":24},{"ruleId":"73","severity":1,"message":"89","line":60,"column":9,"nodeType":"75","messageId":"76","endLine":60,"endColumn":24},{"ruleId":"73","severity":1,"message":"90","line":79,"column":13,"nodeType":"75","messageId":"76","endLine":79,"endColumn":31},{"ruleId":"73","severity":1,"message":"91","line":136,"column":13,"nodeType":"75","messageId":"76","endLine":136,"endColumn":26},{"ruleId":"73","severity":1,"message":"92","line":182,"column":13,"nodeType":"75","messageId":"76","endLine":182,"endColumn":20},{"ruleId":"73","severity":1,"message":"93","line":304,"column":13,"nodeType":"75","messageId":"76","endLine":304,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":342,"column":34,"nodeType":"96","messageId":"97","endLine":342,"endColumn":36},{"ruleId":"73","severity":1,"message":"98","line":378,"column":13,"nodeType":"75","messageId":"76","endLine":378,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":396,"column":34,"nodeType":"96","messageId":"97","endLine":396,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":397,"column":32,"nodeType":"96","messageId":"97","endLine":397,"endColumn":34},{"ruleId":"83","severity":1,"message":"99","line":415,"column":6,"nodeType":"85","endLine":415,"endColumn":57,"suggestions":"100"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":9},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"103","text":"104"},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'instructionsText' is assigned a value but never used.","'rectBackground' is assigned a value but never used.","'yearCirclesText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'margin.bottom', 'margin.left', 'margin.right', 'margin.top', and 'setSelectedYear'. Either include them or remove the dependency array. If 'setSelectedYear' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["105"],"'faRadiation' is defined but never used.","'allGenresColour' is assigned a value but never used.","'underratedScore' is assigned a value but never used.","'lowQuantileMembers' is assigned a value but never used.","'yAxisSideText' is assigned a value but never used.","'flowers' is assigned a value but never used.","'legendSelectedGenreTextFront' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'resetButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'margin.bottom', 'margin.left', 'margin.right', 'margin.top', 'maxPopularity', 'minPopularity', and 'petalScale'. Either include them or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",[2422,2434],"\n          .",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [data, allData, margin.left, margin.right, margin.top, margin.bottom, setSelectedYear]",{"range":"111","text":"112"},"Update the dependencies array to be: [allData, selectedYear, width, height, desktopSize, margin.right, margin.bottom, margin.top, margin.left, minPopularity, maxPopularity, petalScale]",{"range":"113","text":"114"},[5447,5462],"[data, allData, margin.left, margin.right, margin.top, margin.bottom, setSelectedYear]",[16731,16782],"[allData, selectedYear, width, height, desktopSize, margin.right, margin.bottom, margin.top, margin.left, minPopularity, maxPopularity, petalScale]"]