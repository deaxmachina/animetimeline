[{"/Users/user/Code/Projects/animetimeline/src/index.js":"1","/Users/user/Code/Projects/animetimeline/src/App.js":"2","/Users/user/Code/Projects/animetimeline/src/Components/WholeViz.js":"3","/Users/user/Code/Projects/animetimeline/src/Components/HeroSection.js":"4","/Users/user/Code/Projects/animetimeline/src/Components/AnimeTimeline.js":"5","/Users/user/Code/Projects/animetimeline/src/Components/AnimeGraph.js":"6","/Users/user/Code/Projects/animetimeline/src/Components/Footer.js":"7","/Users/user/Code/Projects/animetimeline/src/Components/genres.js":"8"},{"size":150,"mtime":1610164869332,"results":"9","hashOfConfig":"10"},{"size":169,"mtime":1610165244055,"results":"11","hashOfConfig":"10"},{"size":3709,"mtime":1610183944428,"results":"12","hashOfConfig":"10"},{"size":1502,"mtime":1610173863431,"results":"13","hashOfConfig":"10"},{"size":5732,"mtime":1610165382052,"results":"14","hashOfConfig":"10"},{"size":18851,"mtime":1610180828917,"results":"15","hashOfConfig":"10"},{"size":1520,"mtime":1610186888492,"results":"16","hashOfConfig":"10"},{"size":1148,"mtime":1610165515393,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zllcx7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/user/Code/Projects/animetimeline/src/index.js",[],["38","39"],"/Users/user/Code/Projects/animetimeline/src/App.js",[],"/Users/user/Code/Projects/animetimeline/src/Components/WholeViz.js",["40"],"/Users/user/Code/Projects/animetimeline/src/Components/HeroSection.js",["41","42"],"import React from \"react\";\nimport _ from \"lodash\";\n\n\nconst HeroSection = () => {\n  return (\n    <div id=\"whole-graph-petalscircles-hero\">\n      <h1 className=\"whole-graph-petalscircles-title\">A Timeline of Anime</h1>\n      <div className=\"whole-graph-petalscircles-subtitle\">\n        Explore the evolution of anime over the decades with data from one of the most popular anime fan websites <a href=\"https://myanimelist.net/\" target=\"_blank\">MyAnimeList</a>\n      </div>\n\n      <div className=\"whole-graph-petalscircles-instructions\">\n        <p className=\"whole-graph-petalscircles-instructions-title\">How to read & interact with this visualisation</p>\n        <ul className=\"whole-graph-petalscircles-instructions-list\">\n          <li><span>Each circle in the graph below the timeline = one anime.</span></li>\n          <li><span>Sorted vertically by score (rating). Higher = greater score.</span></li>\n          <li><span>The bigger the anime circle, the more members have seen the anime.</span></li>  \n          <li><span>Number of constituent circles in each anime circle = number of genres. Genres are coloured as per the legend below.</span></li>    \n          <li><span>General tip: Play around, explore! Most elements can be clicked/and or hovered to reveal more information or filter.</span></li>\n        </ul>\n      </div>  \n      <p className=\"whole-graph-petalscircles-disclaimer\">\n        * Best viewed on a laptop/desktop screen.\n      </p>\n    </div>\n\n  )\n}\n\nexport default HeroSection;\n","/Users/user/Code/Projects/animetimeline/src/Components/AnimeTimeline.js",["43","44","45","46","47"],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport * as chroma from \"chroma-js\";\n\n\nconst AnimeTimeline = ({ \n  data, allData, selectedYear, setSelectedYear \n  }) => {\n\n  /// refs ///\n  const svgRef = useRef();\n  const xAxisRef = useRef();\n  const gRef = useRef();\n  const rectRef = useRef();\n\n  /// constatns ///\n  // dimensions \n  const width = 1300;\n  const heightRect = 100;\n  const height = 100;\n  const margin = {top: 30, bottom: 45, right: 20, left: 20}\n  // radius of the timeline circles \n  const minRadiusTimeline = 8;\n  const maxRadiusTimeline = 18;\n  // colours \n  const shapeBackgroundColour = \"#010B14\" //  \"#14213d\" \n  const lowNumberColour = \"#003f66\" // \"#4361ee\" \"#268ECF\"\n  const highNumberColour =  \"#268ECF\" // \"#f72585\" \"#4361ee\"\n  const axisTextColour = \"white\"\n\n\n    /// D3 Code ///\n  useEffect(() => {\n    if (data && allData) {\n\n      /// Scales ///\n      // X Scale \n      const xScale = d3.scaleBand()\n        .domain(data.map(d => d['year'])) // all years\n        .range([margin.left, width - margin.right])\n        .padding(0.1)\n\n      // Colour scale - number of anime per year\n      // find the min and the max number of anime in any given year \n      // for now just using 0 to 1200 hardcoded \n      const colorScale = chroma.scale([lowNumberColour, highNumberColour]\n        .map(color => chroma(color).saturate(0)))\n        .domain([0, 1110])\n      // Scale the circles of the timeline by number of anime of that year\n      const numberAnimeScale = d3.scaleSqrt()\n        .domain(d3.extent(data, d => d.number_animes))\n        .range([minRadiusTimeline, maxRadiusTimeline])\n\n      const g = d3.select(gRef.current)\n\n      /// Axes ///\n      // X Axis \n      const xAxis = g => g  \n        .attr(\"transform\", `translate(${0}, ${heightRect - margin.bottom})`)\n        .call(d3.axisBottom(xScale).tickFormat(i => i).tickSizeOuter(0))\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\"text\")\n          .style(\"fill\", axisTextColour)\n          .attr(\"font-size\", \"0.9em\")\n          .style(\"text-anchor\", \"end\")\n          .attr(\"dx\", \"-.8em\")\n          .attr(\"dy\", \".15em\")\n          .attr(\"transform\", \"rotate(-60)\")\n        )\n        .call(g => g.selectAll(\".tick\")\n          .style(\"color\", axisTextColour)\n        )\n      \n      // for the instructions text above the graph \n      const instructionsText = g\n        .selectAll(\".instructions-text\")\n        .data([\"click on a circle to filter anime by year\"])\n        .join(\"text\")\n        .classed(\"instructions-text\", true)\n        .attr(\"transform\", `translate(${margin.left + 5}, ${margin.top/2 - 5})`)\n        .text(d => d)\n        .attr(\"font-size\", \"12px\")\n        .attr(\"fill\", \"white\")\n        .attr(\"dy\", \"0.35em\")\n\n      /// Graph ///\n\n      // draw a rectangle behind the circles \n      const rectBackground = d3.select(rectRef.current)\n        .append(\"rect\")\n        .attr(\"rx\", 30)\n        .attr(\"ry\", 30)\n        .attr(\"width\", width)\n        .attr(\"height\", heightRect)\n        .attr('fill', shapeBackgroundColour) \n\n      // draw one circle for each year, coloured by number of anime\n      const yearCircles = g\n        .selectAll(\".year-circles\")\n        .data(data)\n        .join(\"circle\")\n        .classed(\"year-circles\", true)\n          .attr(\"r\", d => numberAnimeScale(d['number_animes']))\n          .attr(\"cx\", d => xScale(d['year']) + xScale.bandwidth()/2)\n          .attr(\"cy\", heightRect/3)\n          .attr(\"fill\", d => colorScale(d['number_animes']))\n          .attr(\"fill-opacity\", 1)\n          .attr(\"stroke\", d => colorScale(d['number_animes']))\n          // if you want the stroke to scale with size of circle\n          //.attr(\"stroke-width\", d => numberAnimeScale(d['number_animes']) * 0.5)\n          // if you want the stroke to be constant\n          .attr(\"stroke-width\", 8)\n          .attr(\"stroke-opacity\", 0.5)\n     \n      // add text with number of animes on top of each circle \n      const yearCirclesText = g\n          .selectAll(\".circles-text\")\n          .data(data)\n          .join(\"text\")\n          .classed(\"circles-text\", true)\n            .attr(\"x\", d => xScale(d['year']) + xScale.bandwidth()/2)\n            .attr(\"y\", heightRect/3)\n            .attr(\"dy\", \".35em\")\n            .text(d => d['number_animes'])\n            .attr(\"fill\", axisTextColour)\n            .attr(\"font-size\", \"8px\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"opacity\", 0.8)\n            .attr('cursor', 'default')\n            .attr('pointer-events', 'none')\n            .attr(\"id\", d => d['year'])\n      \n      // set up events on the circles \n      yearCircles\n        .on(\"mouseenter\", onMouseEnter)\n        .on(\"mouseleave\", onMouseLeave)\n        .on(\"click\", onClick)\n      \n      function onClick(e, datum) {\n        setSelectedYear(datum['year'])\n        // expand the radius \n        d3.select(this).attr(\"r\", d => 1.5 * numberAnimeScale(d['number_animes']))\n      }\n      function onMouseEnter(e, datum) {\n        // expand the radius \n        d3.select(this).attr(\"r\", d => 1.5 * numberAnimeScale(d['number_animes']))\n      }\n\n      function onMouseLeave(e, datum) {\n        // shrink the radius back to normal\n        d3.select(this).attr(\"r\", d => numberAnimeScale(d['number_animes']))\n      }\n\n      // call the axes \n      d3.select(xAxisRef.current).call(xAxis)\n\n    } else {\n      console.log(\"Missing data\")\n    }\n  }, [data, allData]);\n\n\n  return (\n    <>\n      <p>timeline - number of anime per year</p>\n      <svg ref={svgRef} width={width} height={height}>\n        <g ref={rectRef}></g>\n        <g ref={gRef}></g>\n        <g ref={xAxisRef}></g>\n      </svg>\n    </>\n  )\n}\n\nexport default AnimeTimeline;","/Users/user/Code/Projects/animetimeline/src/Components/AnimeGraph.js",["48","49","50","51","52","53","54","55","56","57","58","59"],"/Users/user/Code/Projects/animetimeline/src/Components/Footer.js",["60","61"],"/Users/user/Code/Projects/animetimeline/src/Components/genres.js",["62"],"import * as chroma from \"chroma-js\";\nimport _ from \"lodash\";\n\n\nconst firstColour =  \"#21ABC0\"\nconst secondColour = \"#970C3F\"\nconst thirdColour =  \"#22223b\"\n\n// order genres by 'seriousness' \nconst orderedGenres = [\n  \"Kids\",\n  \"Comedy\",\n  \"School\",\n  'Shounen',\n  \"Shoujo\",\n  \"Fantasy\",\n  \"Super Power\",\n  \"Cars\",\n  \"Sports\",\n  \"Game\",\n  \"Adventure\",\n  \"Action\",\n  \"Demons\",\n  \"Samurai\",\n  \"Supernatural\",\n  'Magic',\n  \"Martial Arts\",\n  \"Mecha\",\n  \"Slice of Life\",\n  \"Parody\",\n  \"Romance\",\n  \"Music\",\n  \"Josei\",\n  \"Seinen\",  \n  \"Mystery\",\n  \"Horror\",\n  \"Thriller\",\n  \"Space\",\n  \"Police\",\n  \"Military\",\n  \"Drama\",\n  \"Historical\",\n  'Sci-Fi',\n  \"Psychological\",\n  \"Dementia\",\n]\n\n// these genres not included in the above list \nconst hentaiGenres = [\n  'Hentai',\n  \"Ecchi\",\n  \"Harem\",\n  \"Shounen Ai\",\n  \"Shoujo Ai\",\n  \"Yaoi\",\n  \"Yuri\",\n]\n\nconst colourScaleOrderedGenres = chroma.scale([firstColour, secondColour, thirdColour]\n  .map(color => chroma(color).brighten(0))\n  .map(color => chroma(color).saturate(0.1))\n  )\n  //.mode('lrgb') // hsl lrgb lab\n  .colors(orderedGenres.length)\n\n\n\nexport { orderedGenres, hentaiGenres, colourScaleOrderedGenres }",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":60,"column":49,"nodeType":"69","messageId":"70","endLine":60,"endColumn":50,"fix":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":9},{"ruleId":"76","severity":1,"message":"77","line":10,"column":115,"nodeType":"78","endLine":10,"endColumn":166},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":9},{"ruleId":"72","severity":1,"message":"79","line":76,"column":13,"nodeType":"74","messageId":"75","endLine":76,"endColumn":29},{"ruleId":"72","severity":1,"message":"80","line":90,"column":13,"nodeType":"74","messageId":"75","endLine":90,"endColumn":27},{"ruleId":"72","severity":1,"message":"81","line":117,"column":13,"nodeType":"74","messageId":"75","endLine":117,"endColumn":28},{"ruleId":"82","severity":1,"message":"83","line":161,"column":6,"nodeType":"84","endLine":161,"endColumn":21,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"86","line":53,"column":9,"nodeType":"74","messageId":"75","endLine":53,"endColumn":24},{"ruleId":"72","severity":1,"message":"87","line":57,"column":9,"nodeType":"74","messageId":"75","endLine":57,"endColumn":24},{"ruleId":"72","severity":1,"message":"88","line":76,"column":13,"nodeType":"74","messageId":"75","endLine":76,"endColumn":31},{"ruleId":"72","severity":1,"message":"89","line":175,"column":13,"nodeType":"74","messageId":"75","endLine":175,"endColumn":20},{"ruleId":"72","severity":1,"message":"90","line":297,"column":13,"nodeType":"74","messageId":"75","endLine":297,"endColumn":41},{"ruleId":"72","severity":1,"message":"91","line":309,"column":13,"nodeType":"74","messageId":"75","endLine":309,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":333,"column":34,"nodeType":"94","messageId":"95","endLine":333,"endColumn":36},{"ruleId":"72","severity":1,"message":"96","line":385,"column":13,"nodeType":"74","messageId":"75","endLine":385,"endColumn":33},{"ruleId":"72","severity":1,"message":"97","line":402,"column":13,"nodeType":"74","messageId":"75","endLine":402,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":420,"column":34,"nodeType":"94","messageId":"95","endLine":420,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":421,"column":32,"nodeType":"94","messageId":"95","endLine":421,"endColumn":34},{"ruleId":"82","severity":1,"message":"98","line":441,"column":6,"nodeType":"84","endLine":441,"endColumn":29,"suggestions":"99"},{"ruleId":"76","severity":1,"message":"77","line":20,"column":9,"nodeType":"78","endLine":20,"endColumn":60},{"ruleId":"76","severity":1,"message":"77","line":25,"column":9,"nodeType":"78","endLine":25,"endColumn":75},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":9},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"102","text":"103"},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'instructionsText' is assigned a value but never used.","'rectBackground' is assigned a value but never used.","'yearCirclesText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'margin.bottom', 'margin.left', 'margin.right', 'margin.top', and 'setSelectedYear'. Either include them or remove the dependency array. If 'setSelectedYear' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["104"],"'allGenresColour' is assigned a value but never used.","'underratedScore' is assigned a value but never used.","'lowQuantileMembers' is assigned a value but never used.","'flowers' is assigned a value but never used.","'legendSelectedGenreTextFront' is assigned a value but never used.","'legendSelectedGenreTextInstructions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'underratedButtonText' is assigned a value but never used.","'resetButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'height', 'margin.bottom', 'margin.left', 'margin.right', 'margin.top', 'maxPopularity', 'minPopularity', 'petalScale', and 'width'. Either include them or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",[2328,2340],"\n          .",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [data, allData, margin.left, margin.right, margin.top, margin.bottom, setSelectedYear]",{"range":"110","text":"111"},"Update the dependencies array to be: [allData, height, margin.bottom, margin.left, margin.right, margin.top, maxPopularity, minPopularity, petalScale, selectedYear, width]",{"range":"112","text":"113"},[5445,5460],"[data, allData, margin.left, margin.right, margin.top, margin.bottom, setSelectedYear]",[17770,17793],"[allData, height, margin.bottom, margin.left, margin.right, margin.top, maxPopularity, minPopularity, petalScale, selectedYear, width]"]